<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mingsoft.weixin.dao.IPassiveMessageDao">
	<sql id="column_list">
		PM.PM_ID,PM.PM_EVENT_ID,PM.PM_NEWS_ID,PM.PM_APP_ID,PM.PM_WEIXIN_ID,
		PM.PM_REPLY_NUM,PM.PM_KEY,PM.PM_TYPE,PM.PM_TAG,PM.PM_MESSAGE_ID
	</sql>
	
	<sql id="where">
		<if test="whereMap.passiveMessageAppId != null">and PM_APP_ID = #{whereMap.passiveMessageAppId}</if>
		<if test="whereMap.passiveMessageWeixinId != null">and PM_WEIXIN_ID = #{whereMap.passiveMessageWeixinId}</if>
		<if test="whereMap.passiveMessageEventId != null">and PM_EVENT_ID = #{whereMap.passiveMessageEventId}</if>
		<if test="whereMap.passiveMessageRelyNum != null">and PM_REPLY_NUM = #{whereMap.passiveMessageRelyNum}</if>
		<if test="whereMap.passiveMessageType != null">and PM_TYPE = #{whereMap.passiveMessageType}</if>
		<if test="whereMap.passiveMessageKey != null">and #{whereMap.passiveMessageKey} REGEXP PM_KEY</if>	
	</sql>
	
	<!-- 关联被动消息回复实体开始 -->
	<resultMap id="resultMap" type="com.mingsoft.weixin.entity.PassiveMessageEntity">
		<id column="PM_ID" property="passiveMessageId" /><!-- 自增长ID -->
		<result column="PM_EVENT_ID" property="passiveMessageEventId" /><!-- 该回复属于分类中的事件ID -->
		<result column="PM_NEWS_ID" property="passiveMessageNewsId"/><!-- 关联素材ID -->
		<result column="PM_APP_ID" property="passiveMessageAppId"/> <!-- 关联应用ID -->
		<result column="PM_WEIXIN_ID" property="passiveMessageWeixinId"/> <!-- 关联应用ID -->
		<result column="PM_REPLY_NUM" property="passiveMessageRelyNum"/><!-- 被动回复的次数 -->
		<result column="PM_KEY" property="passiveMessageKey"/><!-- 事件关键字 -->
		<result column="PM_TYPE" property="passiveMessageType"/><!-- 回复属性:	1.最终回复;达到迭代次数之后的回复消息,2.拓展回复迭代回复(优先迭代回复) -->
		<result column="PM_TAG" property="passiveMessageTag" />
		<result column="PM_MESSAGE_ID" property="passiveMessageMessageId" />
	</resultMap>
	<!-- 关联被动消息回复实体结束 -->

	<!-- 自定义字段查询被动消息回复实体开始 -->
	<select id="getEntityByCustom" parameterType="java.util.Map" resultMap="resultMap">
		SELECT <include refid="column_list"/>
		FROM WX_PASSIVE_MESSAGE PM   
		<where>
			<if test="whereMap != null">
	 			<include refid="where"/>
			</if>
		</where>
	</select>	
	<!-- 自定义字段查询被动消息回复实体结束 -->
	
	<!-- 根据自增长ID查询被动消息回复实体开始 -->	
	<select id="getEntity" resultMap="resultMap">
		SELECT <include refid="column_list"/> FROM WX_PASSIVE_MESSAGE PM 
		where PM_ID = #{passiveMessageId}
	</select>
	<!-- 根据自增长ID查询被动消息回复实体结束 -->
	
	<!-- 根据素材ID和微信ID查找被动回复是否调用素材开始-->
	<select id="queryListByNewsIdAndWeixinId" parameterType="java.util.Map" resultMap="resultMap">
		SELECT <include refid="column_list"/>
		FROM WX_PASSIVE_MESSAGE PM  
		<!-- 查询条件 -->
		<where>
			PM_NEWS_ID = #{passiveMessageNewsId} and PM_WEIXIN_ID = #{weixinId}
		</where>
	</select>
	<!-- 根据素材ID和微信ID查找被动回复是否调用素材结束-->
	
	<!-- 自定义字段查询被动消息回复实体集合(支持分页,和字段排序)开始 -->
	<select id="queryListByCustom" parameterType="java.util.Map" resultMap="resultMap">
		SELECT <include refid="column_list"/>
		FROM WX_PASSIVE_MESSAGE PM  
		<!-- 查询条件 -->
		<where>
			<include refid="where"/>
		</where>
		<!-- 排序条件 -->
		<if test="orderMap != null">
			order by
			<if test="orderMap.passiveMessageId != null">
				PM_ID 
				<if test="orderMap.passiveMessageId == true">
					desc
				</if>
				<if test="orderMap.passiveMessageId == false">
					asc
				</if>				
			</if>
		</if>			
		<!-- 分页条件 -->
		<if test="page != null">
			limit ${page.pageNo*page.pageSize},#{page.pageSize}	
		</if>
	</select>
	<!-- 自定义字段查询被动消息回复实体集合(支持分页,和字段排序)结束 -->
	
	<!-- 自定义字段查询被动消息回复实体数量开始 -->
	<select id="queryCountByCustom" resultType="int" parameterType="Map">
		SELECT COUNT(*) FROM WX_PASSIVE_MESSAGE PM  
		<where>
			<if test="whereMap != null">
				<include refid="where"/>
			</if>		
		</where>
	</select>
	<!-- 自定义字段查询被动消息回复实体数量结束 -->
	
	
	<!-- 新增被动消息回复实体开始 -->
	<insert id="saveEntity" useGeneratedKeys="true" keyProperty="passiveMessageLogId" parameterType="com.mingsoft.base.entity.BaseEntity">
		INSERT INTO WX_PASSIVE_MESSAGE
		<!-- 注入字段 -->
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="passiveMessageWeixinId != null">PM_WEIXIN_ID,</if>
			<if test="passiveMessageEventId != null">PM_EVENT_ID,</if>
			<if test="passiveMessageNewsId != null">PM_NEWS_ID,</if>
			<if test="passiveMessageMessageId != null">PM_MESSAGE_ID,</if>
			<if test="passiveMessageAppId != null">PM_APP_ID,</if>
			<if test="passiveMessageRelyNum != null">PM_REPLY_NUM,</if>
			<if test="passiveMessageKey != null">PM_KEY,</if>
			<if test="passiveMessageType != null">PM_TYPE</if>
		</trim>	
		<!-- 注入控制层字段 -->
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="passiveMessageWeixinId != null">#{passiveMessageWeixinId},</if>
			<if test="passiveMessageEventId != null">#{passiveMessageEventId},</if>
			<if test="passiveMessageNewsId != null">#{passiveMessageNewsId},</if>
			<if test="passiveMessageMessageId != null">#{passiveMessageMessageId},</if>
			<if test="passiveMessageAppId != null">#{passiveMessageAppId},</if>
			<if test="passiveMessageRelyNum != null">#{passiveMessageRelyNum},</if>
			<if test="passiveMessageKey != null">#{passiveMessageKey},</if>
			<if test="passiveMessageType != null">#{passiveMessageType}</if>
		</trim>
	</insert>
	<!-- 新增被动消息回复实体结束 -->
	
	<!-- 更新被动回复开始 -->
	<update id="updateEntity" parameterType="com.mingsoft.weixin.entity.PassiveMessageEntity">
		UPDATE WX_PASSIVE_MESSAGE
		<set>
			<if test="passiveMessageEventId != null">PM_EVENT_ID=#{passiveMessageEventId},</if>
			<if test="passiveMessageNewsId != null">PM_NEWS_ID=#{passiveMessageNewsId},</if>
			<if test="passiveMessageAppId != null">PM_APP_ID=#{passiveMessageAppId},</if>
			<if test="passiveMessageRelyNum != null">PM_REPLY_NUM=#{passiveMessageRelyNum},</if>
			<if test="passiveMessageKey != null">PM_KEY=#{passiveMessageKey},</if>
			<if test="passiveMessageType != null">PM_TYPE=#{passiveMessageType}</if>		
		</set>
		WHERE PM_ID=#{passiveMessageId}
	</update>
	<!-- 更新被动回复结束 -->	
	
	<!-- 删除被动回复开始 -->
	<delete id="deleteEntity">
		delete from WX_PASSIVE_MESSAGE
		WHERE PM_ID=#{passiveMessageId}
	</delete>
	<!-- 删除被动回复结束 -->
	
	<!--批量删除被动回复开始  -->
	<delete id="deleteByIds">
		delete from WX_PASSIVE_MESSAGE
		<where>
			PM_ID  in <foreach collection="ids" item="item" index="index" 
			open="(" separator="," close=")">#{item}</foreach>
		</where>
	</delete>	
	<!--批量删除被动回复结束  -->
</mapper>